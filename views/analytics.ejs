<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Analytics</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #121212; /* Dark background */
            color: #f1f1f1; /* Light text for contrast */
            margin: 0;
            padding: 0;
        }

        h1 {
            text-align: center;
            margin: 20px 0;
            color: #39ff14; /* Neon green color */
        }

        .analytics-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 20px;
            margin: 20px;
        }

        section {
            width: 80%;
            max-width: 800px;
            padding: 20px; /* Reduced padding for a compact card */
            background: #1e1e1e; /* Darker card background */
            box-shadow: 0 4px 8px rgba(0, 255, 0, 0.2); /* Green glow shadow */
            border-radius: 10px;
            text-align: center;
        }

        section p {
            font-size: 1.2rem; /* Slightly smaller font */
            margin: 10px 0; /* Reduced margin */
        }

        section strong {
            color: #39ff14; /* Neon green for key values */
        }

        .chart-container {
            width: 400px; /* Fixed width for the chart */
            height: 400px; /* Fixed height for the chart */
            position: relative;
            background: #1e1e1e;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 255, 0, 0.2); /* Green glow */
            padding: 10px;
        }

        canvas {
            width: 100% !important; /* Make the chart fit within the container */
            height: 100% !important; /* Make the chart fit within the container */
        }
    </style>
</head>
<body>

<h1>All-Time Task Analytics</h1>

<div class="analytics-container">
    <!-- Display totals -->
    <section>
        <p><strong>Total Tasks:</strong> <%= totalTasks %></p>
        <p><strong>Pending Tasks:</strong> <%= pendingTasks %></p>
        <p><strong>Completed Tasks:</strong> <%= completedTasks %></p>
    </section>

    <!-- Pie chart -->
    <div class="chart-container">
        <canvas id="analyticsChart"></canvas>
    </div>
</div>

<script>
    // Chart.js data for the pie chart
    const chartData = {
        labels: ['Pending Tasks', 'Completed Tasks'],
        datasets: [{
            data: [<%= pendingTasks %>, <%= completedTasks %>],
            backgroundColor: ['rgba(255, 69, 0, 0.7)', 'rgba(50, 205, 50, 0.7)'], // Orange and Green
            borderColor: ['rgba(255, 69, 0, 1)', 'rgba(50, 205, 50, 1)'], // Darker borders
            borderWidth: 2
        }]
    };

    // Create the pie chart
    const ctx = document.getElementById('analyticsChart').getContext('2d');
    const analyticsChart = new Chart(ctx, {
        type: 'pie',
        data: chartData,
        options: {
            responsive: true,
            maintainAspectRatio: false, /* Ensures the chart respects the container size */
            plugins: {
                title: {
                    display: true,
                    text: 'Task Distribution (Pending vs Completed)',
                    color: '#f1f1f1', // Light title text
                    font: {
                        size: 16
                    }
                },
                legend: {
                    position: 'bottom',
                    labels: {
                        color: '#f1f1f1', // Light legend text
                        font: {
                            size: 12
                        }
                    }
                },
                datalabels: {
                    color: '#ffffff', // White text for labels
                    formatter: (value, context) => {
                        const total = context.dataset.data.reduce((sum, val) => sum + val, 0);
                        const percentage = ((value / total) * 100).toFixed(1);
                        return `${percentage}%`; // Show percentage
                    },
                    font: {
                        size: 12
                    }
                }
            }
        },
        plugins: [ChartDataLabels]
    });
</script>

</body>
</html>
